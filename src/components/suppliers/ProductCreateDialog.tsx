
import React, { useState } from "react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from "@/components/ui/dialog";
import { Barcode } from "lucide-react";
import { Product } from "@/types/purchaseOrder";

interface ProductCreateDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  onCreateProduct: (product: Product) => void;
}

export const ProductCreateDialog = ({ open, onOpenChange, onCreateProduct }: ProductCreateDialogProps) => {
  const [newProduct, setNewProduct] = useState<Partial<Product>>({
    barcode: "",
    name: "",
    purchasePrice: 0,
    sellPrice: 0
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    let parsedValue: string | number = value;
    
    // Parse numeric values
    if (name === "purchasePrice" || name === "sellPrice") {
      parsedValue = value === "" ? 0 : Number(value);
    }
    
    setNewProduct(prev => ({ ...prev, [name]: parsedValue }));
  };

  const handleCreateProduct = () => {
    if (!newProduct.name || !newProduct.barcode) return;
    
    // Create a new product with a unique ID
    // In a real app, this ID would be generated by the backend
    const tempId = Date.now();
    const createdProduct: Product = {
      id: tempId,
      barcode: newProduct.barcode || "",
      name: newProduct.name || "",
      purchasePrice: Number(newProduct.purchasePrice) || 0,
      sellPrice: Number(newProduct.sellPrice) || 0
    };
    
    // Send the created product back to the parent
    onCreateProduct(createdProduct);
    
    // Reset form
    setNewProduct({
      barcode: "",
      name: "",
      purchasePrice: 0,
      sellPrice: 0
    });
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle>Ajouter un nouvel article</DialogTitle>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="barcode" className="text-right">Code barre</Label>
            <div className="col-span-3 flex gap-2">
              <Input
                id="barcode"
                name="barcode"
                value={newProduct.barcode}
                onChange={handleInputChange}
                className="flex-1"
              />
              <Button variant="outline" size="icon" title="Scanner">
                <Barcode className="h-4 w-4" />
              </Button>
            </div>
          </div>
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="name" className="text-right">Nom</Label>
            <Input
              id="name"
              name="name"
              value={newProduct.name}
              onChange={handleInputChange}
              className="col-span-3"
            />
          </div>
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="purchasePrice" className="text-right">Prix d'achat</Label>
            <Input
              id="purchasePrice"
              name="purchasePrice"
              type="number"
              value={newProduct.purchasePrice}
              onChange={handleInputChange}
              className="col-span-3"
            />
          </div>
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="sellPrice" className="text-right">Prix de vente</Label>
            <Input
              id="sellPrice"
              name="sellPrice"
              type="number"
              value={newProduct.sellPrice}
              onChange={handleInputChange}
              className="col-span-3"
            />
          </div>
        </div>
        <DialogFooter>
          <Button variant="outline" onClick={() => onOpenChange(false)}>
            Annuler
          </Button>
          <Button onClick={handleCreateProduct}>Ajouter</Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};
